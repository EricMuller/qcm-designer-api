{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2-oas3",
    "title" : "QCM Rest API",
    "contact" : {
      "name" : "Eric MULLER",
      "url" : "https://qcm-rest-api.herokuapp.com/swagger-ui.html#",
      "email" : "eric.pierre.muller@gmail.com"
    },
    "license" : {
      "name" : "MIT License",
      "url" : "https://opensource.org/licenses/mit-license.php"
    }
  },
  "tags" : [ {
    "name" : "Categories",
    "description" : "Category Rest API"
  }, {
    "name" : "Questionnaires",
    "description" : "Questionnaire Rest API"
  }, {
    "name" : "Questions",
    "description" : "Question Rest API"
  }, {
    "name" : "Reports",
    "description" : "Report Rest API"
  }, {
    "name" : "Tags",
    "description" : "Tag Rest API"
  }, {
    "name" : "Upload",
    "description" : "Upload Rest API"
  } ],
  "servers" : [ {
    "url" : "https://qcm-rest-api.herokuapp.com/",
    "description" : "Heroku server"
  }, {
    "url" : "https://qcm-api.webmarks.net/",
    "description" : "webmarks server"
  } ],
  "security" : [ {
    "implicit" : [ "user" ]
  } ],
  "paths" : {
    "/qcm/api/v1/categories" : {
      "get" : {
        "security" : [ {
          "implicit" : [ "user" ]
        } ],
        "tags" : [ "Categories" ],
        "summary" : "Find all categories",
        "operationId" : "getCategories",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Categories" ],
        "summary" : "save a Category",
        "operationId" : "saveCategory",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            }
          },
          "description" : "categoryDto",
          "required" : true
        }
      }
    },
    "/qcm/api/v1/categories/{id}" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Find a category by ID",
        "operationId" : "getCategoryById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/questionnaires" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Find all questionnaires By Page",
        "operationId" : "getQuestionnaires",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tag_id",
          "in" : "query",
          "description" : "Identifiant tag",
          "required" : false,
          "allowEmptyValue" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuestionnaireDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Save a current Questionnaire",
        "operationId" : "saveQuestionnaire",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionnaireDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/QuestionnaireDto"
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Update a current Questionnaire",
        "operationId" : "updateQuestionnaire",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionnaireDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/QuestionnaireDto"
        }
      }
    },
    "/qcm/api/v1/questionnaires/{id}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Find a currentQuestionnaire by ID",
        "operationId" : "getQuestionnaireById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionnaireDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete a currentQuestionnaire by ID",
        "operationId" : "deleteQuestionnaireById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/questionnaires/{id}/questions" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Find all questions by Questionnaire Id",
        "operationId" : "getQuestionsProjectionByQuestionnaireId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Questionnaire",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageQuestionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Add Question",
        "operationId" : "addQuestion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Questionnaire",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionnaireDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/QuestionDto"
        }
      }
    },
    "/qcm/api/v1/questions" : {
      "get" : {
        "tags" : [ "Questions" ],
        "summary" : "Find all questions  by Page",
        "operationId" : "getQuestions",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "questionnaire_id",
          "in" : "query",
          "description" : "Identifiant du questionnaire",
          "required" : false,
          "allowEmptyValue" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tag_id",
          "in" : "query",
          "description" : "Identifiant du tag",
          "required" : false,
          "allowEmptyValue" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuestionTagsDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Questions" ],
        "summary" : "Save a question",
        "operationId" : "saveQuestion",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/QuestionDto"
        }
      },
      "put" : {
        "tags" : [ "Questions" ],
        "summary" : "Update a question",
        "operationId" : "updateQuestion",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/QuestionDto"
        }
      }
    },
    "/qcm/api/v1/questions/{id}" : {
      "get" : {
        "tags" : [ "Questions" ],
        "summary" : "Find a question by ID",
        "operationId" : "getQuestionById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Questions" ],
        "summary" : "Delete a question by ID",
        "operationId" : "deleteQuestionById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/report/query" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Query bY criteria Criteria",
        "operationId" : "queryByName",
        "parameters" : [ {
          "name" : "libelle",
          "in" : "query",
          "description" : "libelle",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuestionDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/tags" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Find all Tags By Page",
        "operationId" : "getTags",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageTag"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Tags" ],
        "summary" : "Save a current Tag",
        "operationId" : "saveTag_1",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TagDto"
        }
      },
      "put" : {
        "tags" : [ "Tags" ],
        "summary" : "Save a current Tag",
        "operationId" : "saveTag",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TagDto"
        }
      }
    },
    "/qcm/api/v1/tags/{id}" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Find a tag by ID",
        "operationId" : "getTagById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/upload" : {
      "get" : {
        "tags" : [ "Upload" ],
        "summary" : "Find all uploads by Page",
        "operationId" : "getUploads",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Upload"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/upload/{fileType}" : {
      "post" : {
        "tags" : [ "Upload" ],
        "summary" : "upload a file",
        "operationId" : "uploadFile_1",
        "parameters" : [ {
          "name" : "fileType",
          "in" : "path",
          "description" : "fileType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Upload File Created ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageDto"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false,
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "async" : {
                    "description" : "async",
                    "type" : "boolean"
                  },
                  "file" : {
                    "description" : "file",
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        }
      }
    },
    "/qcm/api/v1/upload/{id}$" : {
      "delete" : {
        "tags" : [ "Upload" ],
        "summary" : "Delete a upload by ID",
        "operationId" : "deleteUploadById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/qcm/api/v1/upload/{id}/import" : {
      "get" : {
        "tags" : [ "Upload" ],
        "summary" : "import a file",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadDto"
                }
              }
            }
          },
          "202" : {
            "description" : "Import File Launched ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Upload"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "TagDto" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TagDto"
            }
          }
        },
        "description" : "tagDto",
        "required" : true
      },
      "QuestionnaireDto" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/QuestionnaireDto"
            }
          }
        },
        "description" : "questionnaireDto",
        "required" : true
      },
      "QuestionDto" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/QuestionDto"
            }
          }
        },
        "description" : "questionDto",
        "required" : true
      }
    },
    "schemas" : {
      "CategoryDto" : {
        "type" : "object",
        "properties" : {
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated Question ID"
          },
          "libelle" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          }
        },
        "title" : "CategoryDto"
      },
      "MessageDto" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        },
        "title" : "MessageDto"
      },
      "Pageable" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "type" : "string"
          }
        },
        "title" : "Pageable"
      },
      "PageQuestionDto" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionDto"
            }
          },
          "empty" : {
            "type" : "boolean"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/Pageable"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/Sort"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "PageQuestionDto"
      },
      "PageTag" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TagDto"
            }
          },
          "empty" : {
            "type" : "boolean"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/Pageable"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/Sort"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "PageTag"
      },
      "QuestionTagDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "libelle" : {
            "type" : "string"
          }
        },
        "title" : "QuestionTagDto"
      },
      "QuestionTagsDto" : {
        "type" : "object",
        "properties" : {
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The  Creation Date record"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The last Modification Date record"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated product ID"
          },
          "question" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "TO_BE_VALIDATED", "REJECTED", "VALIDATED" ]
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionTagDto"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FREE_TEXT", "MULTIPLE_CHOICE", "MULTIPLE_ANSWER", "TRUE_FALSE" ]
          },
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated version record"
          }
        },
        "title" : "QuestionTagsDto"
      },
      "QuestionDto" : {
        "type" : "object",
        "properties" : {
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The  Creation Date record"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The last Modification Date record"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated product ID"
          },
          "question" : {
            "type" : "string"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResponseDto"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "TO_BE_VALIDATED", "REJECTED", "VALIDATED" ]
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionTagDto"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FREE_TEXT", "MULTIPLE_CHOICE", "MULTIPLE_ANSWER", "TRUE_FALSE" ]
          },
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated version record"
          }
        },
        "title" : "QuestionDto"
      },
      "QuestionnaireTagDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "libelle" : {
            "type" : "string"
          }
        },
        "title" : "QuestionnaireTagDto"
      },
      "QuestionnaireDto" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/CategoryDto"
          },
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The  Creation Date record"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The last Modification Date record"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated product ID"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "TO_BE_VALIDATED", "REJECTED", "VALIDATED" ]
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionnaireTagDto"
            }
          },
          "title" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated version record"
          }
        },
        "title" : "QuestionnaireDto"
      },
      "ResponseEntity" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "object"
          },
          "statusCode" : {
            "type" : "string",
            "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseEntity"
      },
      "ResponseDto" : {
        "type" : "object",
        "properties" : {
          "good" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "response" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "ResponseDto"
      },
      "Sort" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        },
        "title" : "Sort"
      },
      "TagDto" : {
        "type" : "object",
        "properties" : {
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The  Creation Date record"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The last Modification Date record"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated product ID"
          },
          "libelle" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The database generated version record"
          }
        },
        "title" : "TagDto"
      },
      "Upload" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string",
            "format" : "byte"
          },
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateModification" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fileName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedBy" : {
            "type" : "string"
          },
          "pathfileName" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Upload"
      },
      "UploadDto" : {
        "type" : "object",
        "properties" : {
          "dateCreation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fileName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "UploadDto"
      }
    },
    "securitySchemes" : {
      "implicit" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://keycloak.webmarks.net/auth/realms/qcm/protocol/openid-connect/auth",
            "scopes" : { }
          }
        }
      }
    }
  }
}